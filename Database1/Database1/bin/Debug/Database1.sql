/*
Deployment script for Database1

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "Database1"
:setvar DefaultFilePrefix "Database1"
:setvar DefaultDataPath "C:\Users\Micah\AppData\Local\Microsoft\VisualStudio\SSDT\Database1"
:setvar DefaultLogPath "C:\Users\Micah\AppData\Local\Microsoft\VisualStudio\SSDT\Database1"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
/*
The type for column CourseName in table [dbo].[Courses] is currently  NTEXT NULL but is being changed to  VARCHAR (50) NULL. Data loss could occur.

The type for column CourseNum in table [dbo].[Courses] is currently  NTEXT NULL but is being changed to  VARCHAR (50) NULL. Data loss could occur.
*/

IF EXISTS (select top 1 1 from [dbo].[Courses])
    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
/*
The type for column Name in table [dbo].[Professors] is currently  NTEXT NULL but is being changed to  VARCHAR (50) NULL. Data loss could occur.
*/

IF EXISTS (select top 1 1 from [dbo].[Professors])
    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
/*
The type for column Content in table [dbo].[Reviews] is currently  NTEXT NULL but is being changed to  VARCHAR (50) NULL. Data loss could occur.
*/

IF EXISTS (select top 1 1 from [dbo].[Reviews])
    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
/*
The type for column Name in table [dbo].[Universities] is currently  NTEXT NULL but is being changed to  VARCHAR (50) NULL. Data loss could occur.
*/

IF EXISTS (select top 1 1 from [dbo].[Universities])
    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
PRINT N'Dropping unnamed constraint on [dbo].[Professors]...';


GO
ALTER TABLE [dbo].[Professors] DROP CONSTRAINT [DF__Professor__Unive__31EC6D26];


GO
PRINT N'Dropping [dbo].[FK_Courses_Universities]...';


GO
ALTER TABLE [dbo].[Courses] DROP CONSTRAINT [FK_Courses_Universities];


GO
PRINT N'Dropping [dbo].[FK_Reviews_Courses]...';


GO
ALTER TABLE [dbo].[Reviews] DROP CONSTRAINT [FK_Reviews_Courses];


GO
PRINT N'Dropping [dbo].[FK_Reviews_Professors]...';


GO
ALTER TABLE [dbo].[Reviews] DROP CONSTRAINT [FK_Reviews_Professors];


GO
PRINT N'Starting rebuilding table [dbo].[Courses]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Courses] (
    [Id]           INT          NOT NULL,
    [CourseName]   VARCHAR (50) NULL,
    [UniversityID] INT          NULL,
    [CourseNum]    VARCHAR (50) NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Courses])
    BEGIN
        INSERT INTO [dbo].[tmp_ms_xx_Courses] ([Id], [CourseName], [UniversityID], [CourseNum])
        SELECT   [Id],
                 CAST ([CourseName] AS VARCHAR (50)),
                 [UniversityID],
                 CAST ([CourseNum] AS VARCHAR (50))
        FROM     [dbo].[Courses]
        ORDER BY [Id] ASC;
    END

DROP TABLE [dbo].[Courses];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Courses]', N'Courses';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[Professors]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Professors] (
    [Id]           INT          NOT NULL,
    [Name]         VARCHAR (50) NULL,
    [UniversityID] INT          DEFAULT 0 NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Professors])
    BEGIN
        INSERT INTO [dbo].[tmp_ms_xx_Professors] ([Id], [Name], [UniversityID])
        SELECT   [Id],
                 CAST ([Name] AS VARCHAR (50)),
                 [UniversityID]
        FROM     [dbo].[Professors]
        ORDER BY [Id] ASC;
    END

DROP TABLE [dbo].[Professors];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Professors]', N'Professors';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[Reviews]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Reviews] (
    [Id]          INT          NOT NULL,
    [ProfessorID] INT          NULL,
    [Content]     VARCHAR (50) NULL,
    [TextbookUse] INT          NULL,
    [Rating]      FLOAT (53)   NULL,
    [CourseID]    INT          NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Reviews])
    BEGIN
        INSERT INTO [dbo].[tmp_ms_xx_Reviews] ([Id], [ProfessorID], [Content], [TextbookUse], [Rating], [CourseID])
        SELECT   [Id],
                 [ProfessorID],
                 CAST ([Content] AS VARCHAR (50)),
                 [TextbookUse],
                 [Rating],
                 [CourseID]
        FROM     [dbo].[Reviews]
        ORDER BY [Id] ASC;
    END

DROP TABLE [dbo].[Reviews];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Reviews]', N'Reviews';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[Universities]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Universities] (
    [Id]   INT          NOT NULL,
    [Name] VARCHAR (50) NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Universities])
    BEGIN
        INSERT INTO [dbo].[tmp_ms_xx_Universities] ([Id], [Name])
        SELECT   [Id],
                 CAST ([Name] AS VARCHAR (50))
        FROM     [dbo].[Universities]
        ORDER BY [Id] ASC;
    END

DROP TABLE [dbo].[Universities];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Universities]', N'Universities';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[FK_Courses_Universities]...';


GO
ALTER TABLE [dbo].[Courses] WITH NOCHECK
    ADD CONSTRAINT [FK_Courses_Universities] FOREIGN KEY ([UniversityID]) REFERENCES [dbo].[Universities] ([Id]);


GO
PRINT N'Creating [dbo].[FK_Reviews_Courses]...';


GO
ALTER TABLE [dbo].[Reviews] WITH NOCHECK
    ADD CONSTRAINT [FK_Reviews_Courses] FOREIGN KEY ([CourseID]) REFERENCES [dbo].[Courses] ([Id]);


GO
PRINT N'Creating [dbo].[FK_Reviews_Professors]...';


GO
ALTER TABLE [dbo].[Reviews] WITH NOCHECK
    ADD CONSTRAINT [FK_Reviews_Professors] FOREIGN KEY ([ProfessorID]) REFERENCES [dbo].[Professors] ([Id]);


GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/
SELECT * From Courses;
/*
INSERT INTO Courses values (2, 'Digital Design Fundamentals', 1, 'CSE120')
*/
GO

GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[Courses] WITH CHECK CHECK CONSTRAINT [FK_Courses_Universities];

ALTER TABLE [dbo].[Reviews] WITH CHECK CHECK CONSTRAINT [FK_Reviews_Courses];

ALTER TABLE [dbo].[Reviews] WITH CHECK CHECK CONSTRAINT [FK_Reviews_Professors];


GO
PRINT N'Update complete.';


GO
